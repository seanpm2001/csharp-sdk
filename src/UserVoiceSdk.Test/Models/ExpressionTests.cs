/* 
 * UserVoice API
 *
 * A RESTful API to interface with UserVoice's feedback system. Online documentation available here: https://developer.uservoice.com/docs/api/v2/reference/.
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using UserVoiceSdk.Api;
using UserVoiceSdk.Models;
using UserVoiceSdk.Client;
using System.Reflection;

namespace UserVoiceSdk.Test
{
    /// <summary>
    ///  Class for testing Expression
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ExpressionTests
    {
        // TODO uncomment below to declare an instance variable for Expression
        //private Expression instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Expression
            //instance = new Expression();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Expression
        /// </summary>
        [Test]
        public void ExpressionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Expression
            //Assert.IsInstanceOfType<Expression> (instance, "variable 'instance' is a Expression");
        }

        /// <summary>
        /// Test the property 'Column'
        /// </summary>
        [Test]
        public void ColumnTest()
        {
            // TODO unit test for the property 'Column'
        }
        /// <summary>
        /// Test the property 'Expressions'
        /// </summary>
        [Test]
        public void ExpressionsTest()
        {
            // TODO unit test for the property 'Expressions'
        }
        /// <summary>
        /// Test the property 'Operand'
        /// </summary>
        [Test]
        public void OperandTest()
        {
            // TODO unit test for the property 'Operand'
        }
        /// <summary>
        /// Test the property '_Operator'
        /// </summary>
        [Test]
        public void _OperatorTest()
        {
            // TODO unit test for the property '_Operator'
        }
        /// <summary>
        /// Test the property 'Unit'
        /// </summary>
        [Test]
        public void UnitTest()
        {
            // TODO unit test for the property 'Unit'
        }

    }

}
