/* 
 * UserVoice API
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace UservoiceSDK.Models
{
    /// <summary>
    /// SuggestionActivityEntry
    /// </summary>
    [DataContract]
    public partial class SuggestionActivityEntry :  IEquatable<SuggestionActivityEntry>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SuggestionActivityEntry" /> class.
        /// </summary>
        /// <param name="CreatedAt">CreatedAt.</param>
        /// <param name="Id">Id.</param>
        /// <param name="Kind">Kind.</param>
        /// <param name="Links">Links.</param>
        /// <param name="NewBody">NewBody.</param>
        /// <param name="NewState">NewState.</param>
        /// <param name="NewTitle">NewTitle.</param>
        /// <param name="OldBody">OldBody.</param>
        /// <param name="OldState">OldState.</param>
        /// <param name="OldTitle">OldTitle.</param>
        public SuggestionActivityEntry(DateTime? CreatedAt = null, long? Id = null, string Kind = null, SuggestionActivityEntryLinks Links = null, string NewBody = null, string NewState = null, string NewTitle = null, string OldBody = null, string OldState = null, string OldTitle = null)
        {
            this.CreatedAt = CreatedAt;
            this.Id = Id;
            this.Kind = Kind;
            this.Links = Links;
            this.NewBody = NewBody;
            this.NewState = NewState;
            this.NewTitle = NewTitle;
            this.OldBody = OldBody;
            this.OldState = OldState;
            this.OldTitle = OldTitle;
        }
        
        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public DateTime? CreatedAt { get; set; }
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }
        /// <summary>
        /// Gets or Sets Kind
        /// </summary>
        [DataMember(Name="kind", EmitDefaultValue=false)]
        public string Kind { get; set; }
        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name="links", EmitDefaultValue=false)]
        public SuggestionActivityEntryLinks Links { get; set; }
        /// <summary>
        /// Gets or Sets NewBody
        /// </summary>
        [DataMember(Name="new_body", EmitDefaultValue=false)]
        public string NewBody { get; set; }
        /// <summary>
        /// Gets or Sets NewState
        /// </summary>
        [DataMember(Name="new_state", EmitDefaultValue=false)]
        public string NewState { get; set; }
        /// <summary>
        /// Gets or Sets NewTitle
        /// </summary>
        [DataMember(Name="new_title", EmitDefaultValue=false)]
        public string NewTitle { get; set; }
        /// <summary>
        /// Gets or Sets OldBody
        /// </summary>
        [DataMember(Name="old_body", EmitDefaultValue=false)]
        public string OldBody { get; set; }
        /// <summary>
        /// Gets or Sets OldState
        /// </summary>
        [DataMember(Name="old_state", EmitDefaultValue=false)]
        public string OldState { get; set; }
        /// <summary>
        /// Gets or Sets OldTitle
        /// </summary>
        [DataMember(Name="old_title", EmitDefaultValue=false)]
        public string OldTitle { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SuggestionActivityEntry {\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Kind: ").Append(Kind).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  NewBody: ").Append(NewBody).Append("\n");
            sb.Append("  NewState: ").Append(NewState).Append("\n");
            sb.Append("  NewTitle: ").Append(NewTitle).Append("\n");
            sb.Append("  OldBody: ").Append(OldBody).Append("\n");
            sb.Append("  OldState: ").Append(OldState).Append("\n");
            sb.Append("  OldTitle: ").Append(OldTitle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as SuggestionActivityEntry);
        }

        /// <summary>
        /// Returns true if SuggestionActivityEntry instances are equal
        /// </summary>
        /// <param name="other">Instance of SuggestionActivityEntry to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SuggestionActivityEntry other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.CreatedAt == other.CreatedAt ||
                    this.CreatedAt != null &&
                    this.CreatedAt.Equals(other.CreatedAt)
                ) && 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.Kind == other.Kind ||
                    this.Kind != null &&
                    this.Kind.Equals(other.Kind)
                ) && 
                (
                    this.Links == other.Links ||
                    this.Links != null &&
                    this.Links.Equals(other.Links)
                ) && 
                (
                    this.NewBody == other.NewBody ||
                    this.NewBody != null &&
                    this.NewBody.Equals(other.NewBody)
                ) && 
                (
                    this.NewState == other.NewState ||
                    this.NewState != null &&
                    this.NewState.Equals(other.NewState)
                ) && 
                (
                    this.NewTitle == other.NewTitle ||
                    this.NewTitle != null &&
                    this.NewTitle.Equals(other.NewTitle)
                ) && 
                (
                    this.OldBody == other.OldBody ||
                    this.OldBody != null &&
                    this.OldBody.Equals(other.OldBody)
                ) && 
                (
                    this.OldState == other.OldState ||
                    this.OldState != null &&
                    this.OldState.Equals(other.OldState)
                ) && 
                (
                    this.OldTitle == other.OldTitle ||
                    this.OldTitle != null &&
                    this.OldTitle.Equals(other.OldTitle)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.CreatedAt != null)
                    hash = hash * 59 + this.CreatedAt.GetHashCode();
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.Kind != null)
                    hash = hash * 59 + this.Kind.GetHashCode();
                if (this.Links != null)
                    hash = hash * 59 + this.Links.GetHashCode();
                if (this.NewBody != null)
                    hash = hash * 59 + this.NewBody.GetHashCode();
                if (this.NewState != null)
                    hash = hash * 59 + this.NewState.GetHashCode();
                if (this.NewTitle != null)
                    hash = hash * 59 + this.NewTitle.GetHashCode();
                if (this.OldBody != null)
                    hash = hash * 59 + this.OldBody.GetHashCode();
                if (this.OldState != null)
                    hash = hash * 59 + this.OldState.GetHashCode();
                if (this.OldTitle != null)
                    hash = hash * 59 + this.OldTitle.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
