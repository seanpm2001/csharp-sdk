/* 
 * UserVoice API
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace UservoiceSDK.Models
{
    /// <summary>
    /// BulkAction
    /// </summary>
    [DataContract]
    public partial class BulkAction :  IEquatable<BulkAction>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BulkAction" /> class.
        /// </summary>
        /// <param name="Action">Action.</param>
        /// <param name="ActionParams">ActionParams.</param>
        /// <param name="Complete">Complete.</param>
        /// <param name="Id">Id.</param>
        /// <param name="Links">Links.</param>
        /// <param name="ObjectType">ObjectType.</param>
        /// <param name="ObjectsChanged">ObjectsChanged.</param>
        /// <param name="ObjectsSelected">ObjectsSelected.</param>
        /// <param name="SearchParams">SearchParams.</param>
        public BulkAction(string Action = null, string ActionParams = null, bool? Complete = null, long? Id = null, BulkActionLinks Links = null, string ObjectType = null, long? ObjectsChanged = null, long? ObjectsSelected = null, string SearchParams = null)
        {
            this.Action = Action;
            this.ActionParams = ActionParams;
            this.Complete = Complete;
            this.Id = Id;
            this.Links = Links;
            this.ObjectType = ObjectType;
            this.ObjectsChanged = ObjectsChanged;
            this.ObjectsSelected = ObjectsSelected;
            this.SearchParams = SearchParams;
        }
        
        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [DataMember(Name="action", EmitDefaultValue=false)]
        public string Action { get; set; }
        /// <summary>
        /// Gets or Sets ActionParams
        /// </summary>
        [DataMember(Name="action_params", EmitDefaultValue=false)]
        public string ActionParams { get; set; }
        /// <summary>
        /// Gets or Sets Complete
        /// </summary>
        [DataMember(Name="complete", EmitDefaultValue=false)]
        public bool? Complete { get; set; }
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }
        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name="links", EmitDefaultValue=false)]
        public BulkActionLinks Links { get; set; }
        /// <summary>
        /// Gets or Sets ObjectType
        /// </summary>
        [DataMember(Name="object_type", EmitDefaultValue=false)]
        public string ObjectType { get; set; }
        /// <summary>
        /// Gets or Sets ObjectsChanged
        /// </summary>
        [DataMember(Name="objects_changed", EmitDefaultValue=false)]
        public long? ObjectsChanged { get; set; }
        /// <summary>
        /// Gets or Sets ObjectsSelected
        /// </summary>
        [DataMember(Name="objects_selected", EmitDefaultValue=false)]
        public long? ObjectsSelected { get; set; }
        /// <summary>
        /// Gets or Sets SearchParams
        /// </summary>
        [DataMember(Name="search_params", EmitDefaultValue=false)]
        public string SearchParams { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BulkAction {\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("  ActionParams: ").Append(ActionParams).Append("\n");
            sb.Append("  Complete: ").Append(Complete).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  ObjectType: ").Append(ObjectType).Append("\n");
            sb.Append("  ObjectsChanged: ").Append(ObjectsChanged).Append("\n");
            sb.Append("  ObjectsSelected: ").Append(ObjectsSelected).Append("\n");
            sb.Append("  SearchParams: ").Append(SearchParams).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as BulkAction);
        }

        /// <summary>
        /// Returns true if BulkAction instances are equal
        /// </summary>
        /// <param name="other">Instance of BulkAction to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BulkAction other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Action == other.Action ||
                    this.Action != null &&
                    this.Action.Equals(other.Action)
                ) && 
                (
                    this.ActionParams == other.ActionParams ||
                    this.ActionParams != null &&
                    this.ActionParams.Equals(other.ActionParams)
                ) && 
                (
                    this.Complete == other.Complete ||
                    this.Complete != null &&
                    this.Complete.Equals(other.Complete)
                ) && 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.Links == other.Links ||
                    this.Links != null &&
                    this.Links.Equals(other.Links)
                ) && 
                (
                    this.ObjectType == other.ObjectType ||
                    this.ObjectType != null &&
                    this.ObjectType.Equals(other.ObjectType)
                ) && 
                (
                    this.ObjectsChanged == other.ObjectsChanged ||
                    this.ObjectsChanged != null &&
                    this.ObjectsChanged.Equals(other.ObjectsChanged)
                ) && 
                (
                    this.ObjectsSelected == other.ObjectsSelected ||
                    this.ObjectsSelected != null &&
                    this.ObjectsSelected.Equals(other.ObjectsSelected)
                ) && 
                (
                    this.SearchParams == other.SearchParams ||
                    this.SearchParams != null &&
                    this.SearchParams.Equals(other.SearchParams)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Action != null)
                    hash = hash * 59 + this.Action.GetHashCode();
                if (this.ActionParams != null)
                    hash = hash * 59 + this.ActionParams.GetHashCode();
                if (this.Complete != null)
                    hash = hash * 59 + this.Complete.GetHashCode();
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.Links != null)
                    hash = hash * 59 + this.Links.GetHashCode();
                if (this.ObjectType != null)
                    hash = hash * 59 + this.ObjectType.GetHashCode();
                if (this.ObjectsChanged != null)
                    hash = hash * 59 + this.ObjectsChanged.GetHashCode();
                if (this.ObjectsSelected != null)
                    hash = hash * 59 + this.ObjectsSelected.GetHashCode();
                if (this.SearchParams != null)
                    hash = hash * 59 + this.SearchParams.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
